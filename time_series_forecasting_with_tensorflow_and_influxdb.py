# -*- coding: utf-8 -*-
"""Time-Series-Forecasting-with-Tensorflow-and-InfluxDB.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10i8Y5ssGZ3i6hbXzamMyxNqsJn7i0CLo
"""

!pip3 install influxdb-client

## importando as dependências
import tensorflow as tf 
import numpy as np
import pandas as pd

## Loading the data as a pandas dataframe 
data = pd.read_csv("https://raw.githubusercontent.com/gouravsinghbais/Time-Series-Forecasting-with-Tensorflow-and-InfluxDB/master/sunspots-dataset/Sunspots.csv", index_col=0) 
## show first dew rows of the dataset
data.head()

## importando as dependências
from influxdb_client import InfluxDBClient, Point, WritePrecision
from influxdb_client.client.write_api import SYNCHRONOUS


token = "0YEm6OcpmWEv8IO7dYegRkt_xhWZgkU86yXcGcQ5zbGvLGp_Zlm6COlPr3DsoU-8Eqe6B0bFNbPpFfaOt1l6ZQ=="
org = "diegojefferson741@gmail.com"
bucket = "iot"
url="https://europe-west1-1.gcp.cloud2.influxdata.com"
## conectando ao InfluxDB
client = InfluxDBClient(url=url , token=token, org = org)

# convertendo coluna Date para datetime
data['Date'] = pd.to_datetime(data['Date'])

## cria data como índice
data.set_index(data['Date'], drop = True, inplace = True)
data.drop('Date', axis = 1, inplace = True)
data.head()

## cria objeto de escrita da API
## SYNCHRONOUS: armazena múltiplos registros de data por vez
write_api = client.write_api(write_options=SYNCHRONOUS)

## armazena dados no influxdb
## write data to influxdb
response = write_api.write(bucket, org=org, record = data, data_frame_measurement_name='sunspot',
                    	data_frame_tag_columns=['sunspot'])

## busca os dados (utiliza linguagem Flux)
## Recupera dos dados dos últimos 275 anos
query_api = client.query_api()
tables = query_api.query('from(bucket:"iot") |> range(start: -275y)')

